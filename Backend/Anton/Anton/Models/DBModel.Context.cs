//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Anton.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoTecDBEntities : DbContext
    {
        public CoTecDBEntities()
            : base("name=CoTecDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contacted_Person> Contacted_Person { get; set; }
        public virtual DbSet<Continents> Continents { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<CountryLocations> CountryLocations { get; set; }
        public virtual DbSet<EnforcedMeasurements> EnforcedMeasurements { get; set; }
        public virtual DbSet<Events> Events { get; set; }
        public virtual DbSet<Hospital_ICUs> Hospital_ICUs { get; set; }
        public virtual DbSet<Hospital_Medications> Hospital_Medications { get; set; }
        public virtual DbSet<Hospital_Patients> Hospital_Patients { get; set; }
        public virtual DbSet<Hospitals> Hospitals { get; set; }
        public virtual DbSet<Medications> Medications { get; set; }
        public virtual DbSet<Pathologies> Pathologies { get; set; }
        public virtual DbSet<Patient_Medications> Patient_Medications { get; set; }
        public virtual DbSet<Patient_Pathologies> Patient_Pathologies { get; set; }
        public virtual DbSet<Patient_Status> Patient_Status { get; set; }
        public virtual DbSet<Patients> Patients { get; set; }
        public virtual DbSet<SanityMeasurements> SanityMeasurements { get; set; }
    
        public virtual ObjectResult<AcumulatedProcedure_Result> AcumulatedProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcumulatedProcedure_Result>("AcumulatedProcedure");
        }
    
        public virtual ObjectResult<Patients> getPatientsProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients>("getPatientsProcedure");
        }
    
        public virtual ObjectResult<Patients> getPatientsProcedure(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Patients>("getPatientsProcedure", mergeOption);
        }
    
        public virtual ObjectResult<getRegionsProcedure_Result> getRegionsProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRegionsProcedure_Result>("getRegionsProcedure");
        }
    
        public virtual ObjectResult<getHospitalsProcedure_Result> getHospitalsProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getHospitalsProcedure_Result>("getHospitalsProcedure");
        }
    
        public virtual ObjectResult<getEnforcedMeasurements_Result> getEnforcedMeasurements()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEnforcedMeasurements_Result>("getEnforcedMeasurements");
        }
    
        public virtual ObjectResult<getMedicationProcedure_Result> getMedicationProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMedicationProcedure_Result>("getMedicationProcedure");
        }
    
        public virtual ObjectResult<getPathologiesProcedure_Result> getPathologiesProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPathologiesProcedure_Result>("getPathologiesProcedure");
        }
    
        public virtual ObjectResult<string> getPatientStatusProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPatientStatusProcedure");
        }
    
        public virtual ObjectResult<getSanitaryMeasurementsProcedure_Result> getSanitaryMeasurementsProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSanitaryMeasurementsProcedure_Result>("getSanitaryMeasurementsProcedure");
        }
    
        public virtual ObjectResult<getEnforcedMeasurementsProcedure_Result> getEnforcedMeasurementsProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEnforcedMeasurementsProcedure_Result>("getEnforcedMeasurementsProcedure");
        }
    }
}
